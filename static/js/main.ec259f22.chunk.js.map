{"version":3,"sources":["api/users.js","api/todos.js","components/shapes/UserShape.js","components/Todo/Todo.jsx","components/shapes/TodoShape.js","components/TodoList/TodoList.jsx","components/Error/Error.jsx","components/Form/Form.jsx","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserShape","PropTypes","shape","number","isRequired","string","Todo","bool","user","todo","className","type","checked","readOnly","TodoList","map","key","Error","Form","state","userName","newTodo","errorHidden","onChange","event","target","value","setState","replace","addTodo","newTodoItem","props","onAdd","todosLength","preventDefault","find","person","error","this","onSubmit","placeholder","React","Component","preparedTodos","App","todosList","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec259f22.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import PropTypes from 'prop-types';\n\nexport const UserShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    suite: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    zipcode: PropTypes.string.isRequired,\n    geo: PropTypes.shape({\n      lat: PropTypes.string.isRequired,\n      lng: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  phone: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n  company: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    catchPhrase: PropTypes.string.isRequired,\n    bs: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport { TodoShape } from '../shapes/TodoShape';\n\nexport const Todo = ({ todo }) => (\n  <div className=\"todo columns\">\n    <p className=\"column\">{todo.id}</p>\n    <p className=\"column is-half\">{todo.title}</p>\n    <p className=\"column is-one-quarter\">\n      {todo.user.name}\n    </p>\n    <label className=\"checkbox column\">\n      <input\n        type=\"checkbox\"\n        checked={todo.completed}\n        readOnly\n      />\n    </label>\n  </div>\n);\n\nTodo.propTypes = TodoShape;\n","import PropTypes from 'prop-types';\nimport { UserShape } from './UserShape';\n\nexport const TodoShape = PropTypes.shape({\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: UserShape,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\nimport { TodoShape } from '../shapes/TodoShape';\n\nexport const TodoList = ({ todos }) => (\n  <div className=\"todo__list\">\n    <div className=\"todo__header columns\">\n      <p className=\"column\">#</p>\n      <p className=\"column is-half\">Task</p>\n      <p className=\"column is-one-quarter\">User</p>\n      <p className=\"column checkbox\">Is Done</p>\n    </div>\n    {\n      todos.map(todo => (\n        <Todo todo={todo} key={todo.id} />\n      ))\n    }\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ type }) => {\n  if (type === 'user') {\n    return <div className=\"error error--user\">Please choose a user</div>;\n  }\n\n  return <div className=\"error error--title\">Please enter the title</div>;\n};\n\nError.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport users from '../../api/users';\nimport { Error } from '../Error';\n\nexport class Form extends React.Component {\n  state = {\n    userName: '',\n    newTodo: '',\n    errorHidden: true,\n  }\n\n  onChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value.replace(/[^\\w ]/gi, ''),\n    });\n  }\n\n  addTodo = (event) => {\n    const { userName, newTodo } = this.state;\n    const { onAdd, todosLength } = this.props;\n    let newTodoItem;\n\n    event.preventDefault();\n\n    if (userName !== '' && newTodo !== '') {\n      newTodoItem = {\n        id: todosLength + 1,\n        title: newTodo,\n        completed: false,\n        user: users.find(person => person.name === userName),\n      };\n      newTodoItem.userId = newTodoItem.user.id;\n      this.setState({\n        userName: '',\n        newTodo: '',\n      });\n      onAdd(newTodoItem);\n    } else if (userName) {\n      this.setState({\n        error: 'title',\n        errorHidden: false,\n      });\n    } else {\n      this.setState({\n        error: 'user',\n        errorHidden: false,\n      });\n    }\n  }\n\n  render() {\n    const { userName, newTodo, error, errorHidden } = this.state;\n\n    return (\n      <form\n        className=\"todo__form\"\n        onSubmit={this.addTodo}\n      >\n        <div className=\"select\">\n          <select\n            name=\"userName\"\n            onChange={this.onChange}\n            value={userName}\n          >\n            <option value=\"\">\n              Choose name\n            </option>\n            {users.map(({ name, id }) => (\n              <option key={id} value={name}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <input\n          type=\"text\"\n          name=\"newTodo\"\n          onChange={this.onChange}\n          value={newTodo}\n          placeholder=\"Enter your task (letters, numbers and space only)\"\n          className=\"input todo__input\"\n        />\n        <button\n          type=\"submit\"\n          className=\"button is-dark\"\n        >\n          Add task\n        </button>\n        {errorHidden || <Error type={error} />}\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  todosLength: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form';\n\nconst preparedTodos = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todosList: preparedTodos,\n  }\n\n  onAdd = (todo) => {\n    this.setState(state => ({\n      todosList: [\n        ...state.todosList,\n        todo,\n      ],\n    }));\n  }\n\n  render() {\n    const {\n      todosList,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"todo__title\">To do List</h1>\n        <Form\n          onAdd={this.onAdd}\n          todosLength={todosList.length}\n        />\n        <TodoList todos={todosList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}